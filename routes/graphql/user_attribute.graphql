type UserAttribute {
    id: ID!
    name: String
    age: Int
    city: String
    sex: String
    height: Int
    hair: String
    body: String
    skin: String
    eyes: String
    marital_status: String
    children: Boolean
    profession: String
    smoking: String
    alcohol: String
    languages: String
    about: String
    created_at: DateTime
    updated_at: DateTime
    user: User @belongsTo
}

extend type Mutation {
    updateUserAttribute(
        id: ID
        name: String @rules(apply: ["max:20"]),
        age: Int @rules(apply: ["numeric", "min:1", "max:99"])
        city: String
        sex: String
        height: Int @rules(apply: ["numeric", "max:250"])
        hair: String
        body: String
        skin: String
        eyes: String
        marital_status: String
        children: Boolean
        profession: String @rules(apply: ["max:100"])
        smoking: String
        alcohol: String
        languages: String
        about: String @rules(apply: ["max:250"]),
    ): UserAttribute
    @inject(context: "user.attributes.id", name: "id")  # Не лучшее решение, как мне кажется, потому что 2 раза приходится получать объект UserAttribute
    @middleware(checks: ["auth:api"])
    @update(model: "App\\UserAttribute")
}

