input LoginInput {
    country_code: CountryCode! @rules(apply: ["required"])
    phone_number: String! @rules(apply: ["required"])
    password: String! @rules(apply: ["required", "min:8", "max:16"])
}

type AuthPayload {
    access_token: String!
    refresh_token: String!
    expires_in: Int!
    token_type: String!
}

type LogoutResponse {
    status: String!
    message: String
}

input NewPasswordWithCodeInput {
    country_code: CountryCode! @rules(apply: ["required"])
    phone_number: String! @rules(apply: ["required"])
    password: String! @rules(apply: ["required", "min:8", "max:16"])
    password_confirmation: String! @rules(apply: ["required", "min:8", "max:16", "same:input.password"])
}

extend type Mutation {
    login(data: LoginInput): AuthPayload!
    refreshToken(data: LoginInput): AuthPayload! @field(resolver: "App\\GraphQL\\Mutations\\Login@resolve")
    logout: LogoutResponse!
    resetPassword(input: NewPasswordWithCodeInput): Boolean
}
